foldChange
sampleData[,1]
x<- sampleData[,1]
y <- x/blankData[,i]
y
infIndex <- is.infinite(y)
infIndex
length(infIndex) > 0
max(y[!infIndex])
y
infIndex
!infIndex
y[!infIndex]
is.nan(y)
y[is.nan(y)] <- 0
max(y[!infIndex])
max(y[!infIndex])
if(length(infIndex) > 0) {
y[infIndex] <- max(y[!infIndex])
}
foldChange <- apply(sampleData, 2, function(x) {
y <- x/blankData[,i]
infIndex <- is.infinite(y)
y[is.nan(y)] <- 0
if(length(infIndex) > 0) {
y[infIndex] <- max(y[!infIndex])
}
y
}) %>% apply(1, max)
blankData <- heat[,blankCols]
sampleData <- heat[,-blankCols]
double <- log1p(2)
doubleCheck <- list()
for(i in seq_along(blankCols)) {
#minVal <- min(blankData[,i][blankData[,i] > 0])
#x <- blankData[,i][blankData[,i] == 0] <- minVal
foldChange <- apply(sampleData, 2, function(x) {
y <- x/blankData[,i]
infIndex <- is.infinite(y)
y[is.nan(y)] <- 0
if(length(infIndex) > 0) {
y[infIndex] <- max(y[!infIndex])
}
y
}) %>% apply(1, max)
hist(log(foldChange), breaks = 100,
main = paste(colnames(blankData)[i], "Features Under Median Sample Intensity"))
abline(v = double, lty = 2)
doubleCheck[[i]] <- foldChange > double
}
solvent <- doubleCheck[[1]]
spe <- doubleCheck[[2]]
overlap <- solvent | spe
name <- c("Count")
knitr::kable(data.frame(Blank = name, Solvent = sum(solvent), SPE = sum(spe),
Overlap = sum(overlap), Total = length(spe)))
library(dplyr)
library(here)
omanFT <- read.csv(here("data/2018-11-22/OM17 compound_measurements_10k_blanks.csv"),
header = T,
skip = 4)
metadata <- read.table(here("data/2018-11-22/metadata.txt"),
header = T, sep = " ", stringsAsFactors = F)
metadata <- metadata[-nrow(metadata),]
metadata$Sample_Name <- metadata$Sample_Name %>% sub(":", "", .)
dataCols <- list()
for(i in 1:nrow(metadata)) {
dataCols[[i]] <- grep(metadata$Sample_Name[i],colnames(omanFT))[1]
}
colnames(omanFT)[c(2,5)] <- c("Neutral_Mass", "Retention_Time")
omanFT$Retention_Time <- omanFT$Retention_Time * 60
## consider
omanFT <- omanFT[,c(2,5, unlist(dataCols))]
dataCols <- grep("XS1", colnames(omanFT))
colnames(omanFT)[dataCols] <- metadata$Sample_Type[which(metadata$Sample_Name %in%
colnames(omanFT)[dataCols])]
rm(i)
intensityTable <- omanFT[,dataCols]
x <- sapply(1:ncol(intensityTable), function(x) {
hist(intensityTable[,x], main = colnames(intensityTable)[x], breaks = 250)
})
omanFT[,dataCols] <- log1p(intensityTable)
rm(x, intensityTable)
heat <- omanFT[,dataCols]
blankCols <- grep("blank", colnames(heat), ignore.case = T)
name <- c("Count")
solvent <- heat[,blankCols[1]] > 0
spe <- heat[,blankCols[2]] > 0
overlap <- solvent | spe
knitr::kable(data.frame(Blank = name, Solvent = sum(solvent), SPE = sum(spe),
Overlap = sum(overlap), Total = length(spe)))
heatmap(as.matrix(heat), main = "Distribution of Features Between Samples")
rm(solvent, spe, overlap, name)
blankData <- heat[,blankCols]
sampleData <- heat[,-blankCols]
double <- log1p(2)
doubleCheck <- list()
for(i in seq_along(blankCols)) {
#minVal <- min(blankData[,i][blankData[,i] > 0])
#x <- blankData[,i][blankData[,i] == 0] <- minVal
foldChange <- apply(sampleData, 2, function(x) {
y <- x/blankData[,i]
infIndex <- is.infinite(y)
y[is.nan(y)] <- 0
if(length(infIndex) > 0) {
y[infIndex] <- max(y[!infIndex])
}
y
}) %>% apply(1, max)
hist(log(foldChange), breaks = 100,
main = paste(colnames(blankData)[i], "Features Under Median Sample Intensity"))
abline(v = double, lty = 2)
doubleCheck[[i]] <- foldChange > double
}
blankData <- heat[,blankCols]
sampleData <- heat[,-blankCols]
double <- log1p(2)
doubleCheck <- list()
for(i in seq_along(blankCols)) {
#minVal <- min(blankData[,i][blankData[,i] > 0])
#x <- blankData[,i][blankData[,i] == 0] <- minVal
foldChange <- apply(sampleData, 2, function(x) {
y <- x/blankData[,i]
infIndex <- is.infinite(y)
y[is.nan(y)] <- 0
if(length(infIndex) > 0) {
y[infIndex] <- max(y[!infIndex])
}
y
}) %>% apply(1, max)
hist(log(foldChange), breaks = 1000,
main = paste(colnames(blankData)[i], "Features Under Median Sample Intensity"))
abline(v = double, lty = 2)
doubleCheck[[i]] <- foldChange > double
}
blankData <- heat[,blankCols]
sampleData <- heat[,-blankCols]
double <- log1p(2)
doubleCheck <- list()
for(i in seq_along(blankCols)) {
#minVal <- min(blankData[,i][blankData[,i] > 0])
#x <- blankData[,i][blankData[,i] == 0] <- minVal
foldChange <- apply(sampleData, 2, function(x) {
y <- x/blankData[,i]
infIndex <- is.infinite(y)
y[is.nan(y)] <- 0
if(length(infIndex) > 0) {
y[infIndex] <- max(y[!infIndex])
}
y
}) %>% apply(1, max)
hist(log(foldChange), breaks = 100,
main = paste(colnames(blankData)[i], "Features Under Median Sample Intensity"))
abline(v = double, lty = 2)
doubleCheck[[i]] <- foldChange > double
}
overlap
library(dplyr)
library(here)
omanFT <- read.csv(here("data/2018-11-22/OM17 compound_measurements_10k_blanks.csv"),
header = T,
skip = 4)
metadata <- read.table(here("data/2018-11-22/metadata.txt"),
header = T, sep = " ", stringsAsFactors = F)
metadata <- metadata[-nrow(metadata),]
metadata$Sample_Name <- metadata$Sample_Name %>% sub(":", "", .)
dataCols <- list()
for(i in 1:nrow(metadata)) {
dataCols[[i]] <- grep(metadata$Sample_Name[i],colnames(omanFT))[1]
}
colnames(omanFT)[c(2,5)] <- c("Neutral_Mass", "Retention_Time")
omanFT$Retention_Time <- omanFT$Retention_Time * 60
## consider
omanFT <- omanFT[,c(2,5, unlist(dataCols))]
dataCols <- grep("XS1", colnames(omanFT))
colnames(omanFT)[dataCols] <- metadata$Sample_Type[which(metadata$Sample_Name %in%
colnames(omanFT)[dataCols])]
rm(i)
intensityTable <- omanFT[,dataCols]
x <- sapply(1:ncol(intensityTable), function(x) {
hist(intensityTable[,x], main = colnames(intensityTable)[x], breaks = 250)
})
omanFT[,dataCols] <- log1p(intensityTable)
rm(x, intensityTable)
heat <- omanFT[,dataCols]
blankCols <- grep("blank", colnames(heat), ignore.case = T)
name <- c("Count")
solvent <- heat[,blankCols[1]] > 0
spe <- heat[,blankCols[2]] > 0
overlap <- solvent | spe
knitr::kable(data.frame(Blank = name, Solvent = sum(solvent), SPE = sum(spe),
Overlap = sum(overlap), Total = length(spe)))
heatmap(as.matrix(heat), main = "Distribution of Features Between Samples")
rm(solvent, spe, overlap, name)
blankData <- heat[,blankCols]
sampleData <- heat[,-blankCols]
double <- log1p(2)
doubleCheck <- list()
for(i in seq_along(blankCols)) {
#minVal <- min(blankData[,i][blankData[,i] > 0])
#x <- blankData[,i][blankData[,i] == 0] <- minVal
foldChange <- apply(sampleData, 2, function(x) {
y <- x/blankData[,i]
infIndex <- is.infinite(y)
y[is.nan(y)] <- 0
if(length(infIndex) > 0) {
y[infIndex] <- max(y[!infIndex])
}
y
}) %>% apply(1, max)
hist(log(foldChange), breaks = 100,
main = paste(colnames(blankData)[i], "Features Under Median Sample Intensity"))
abline(v = double, lty = 2)
doubleCheck[[i]] <- foldChange > double
}
solvent <- doubleCheck[[1]]
spe <- doubleCheck[[2]]
overlap <- solvent | spe
name <- c("Count")
knitr::kable(data.frame(Blank = name, Solvent = sum(solvent), SPE = sum(spe),
Overlap = sum(overlap), Total = length(spe)))
omanFT <- omanFT[!overlap,]
rm(list=setdiff(ls(), c("omanFT", "metadata", "dataCols")))
omanFT
ls
#here("data/2018-11-23/QA_oman_feature_table.txt")
write.table(omanFT)
write.table(omanFT, file = here("data/2018-11-23/QA_oman_feature_table.txt"),row.names = F)
read.table(here("data/2018-11-23/QA_oman_feature_table.txt"))
read.table(here("data/2018-11-23/QA_oman_feature_table.txt"), header = T,
stringsAsFactors = F)
omanFT <- read.table(here("data/2018-11-23/QA_oman_feature_table.txt"), header = T,
stringsAsFactors = F)
omanFT
ncol
ncol(omanFT)
dataCols <- 3:9
dataCols
as.matrix(omanFT[,dataCols]) %>% heatmap()
as.matrix(omanFT[,dataCols]) %>% heatmap()
library(dplyr)
library(here)
omanFT
library(dplyr)
library(here)
omanFT <- read.csv(here("data/2018-11-22/OM17 compound_measurements_10k_blanks.csv"),
header = T,
skip = 4)
metadata <- read.table(here("data/2018-11-22/metadata.txt"),
header = T, sep = " ", stringsAsFactors = F)
metadata <- metadata[-nrow(metadata),]
metadata$Sample_Name <- metadata$Sample_Name %>% sub(":", "", .)
dataCols <- list()
for(i in 1:nrow(metadata)) {
dataCols[[i]] <- grep(metadata$Sample_Name[i],colnames(omanFT))[1]
}
colnames(omanFT)[c(2,5)] <- c("Neutral_Mass", "Retention_Time")
omanFT$Retention_Time <- omanFT$Retention_Time * 60
## consider
omanFT <- omanFT[,c(2,5, unlist(dataCols))]
dataCols <- grep("XS1", colnames(omanFT))
colnames(omanFT)[dataCols] <- metadata$Sample_Type[which(metadata$Sample_Name %in%
colnames(omanFT)[dataCols])]
rm(i)
intensityTable <- omanFT[,dataCols]
x <- sapply(1:ncol(intensityTable), function(x) {
hist(intensityTable[,x], main = colnames(intensityTable)[x], breaks = 250)
})
omanFT[,dataCols] <- log1p(intensityTable)
rm(x, intensityTable)
heat <- omanFT[,dataCols]
blankCols <- grep("blank", colnames(heat), ignore.case = T)
name <- c("Count")
solvent <- heat[,blankCols[1]] > 0
spe <- heat[,blankCols[2]] > 0
overlap <- solvent | spe
knitr::kable(data.frame(Blank = name, Solvent = sum(solvent), SPE = sum(spe),
Overlap = sum(overlap), Total = length(spe)))
heatmap(as.matrix(heat), main = "Distribution of Features Between Samples")
rm(solvent, spe, overlap, name)
blankData <- heat[,blankCols]
sampleData <- heat[,-blankCols]
double <- log1p(2)
doubleCheck <- list()
for(i in seq_along(blankCols)) {
#minVal <- min(blankData[,i][blankData[,i] > 0])
#x <- blankData[,i][blankData[,i] == 0] <- minVal
foldChange <- apply(sampleData, 2, function(x) {
y <- x/blankData[,i]
infIndex <- is.infinite(y)
y[is.nan(y)] <- 0
if(length(infIndex) > 0) {
y[infIndex] <- max(y[!infIndex])
}
y
}) %>% apply(1, max)
hist(log(foldChange), breaks = 100,
main = paste(colnames(blankData)[i], "Features Under Median Sample Intensity"))
abline(v = double, lty = 2)
doubleCheck[[i]] <- foldChange > double
}
omanFT[!overlap,]
message("Difference in Retained Features Between Approaches: ", 2089 - 1809)
solvent <- doubleCheck[[1]]
spe <- doubleCheck[[2]]
overlap <- solvent | spe
name <- c("Count")
omanFT[!overlap,]
omanFT[overlap,]
overlap
solvent
spe
doubleCheck
solvent <- !doubleCheck[[1]]
spe <- !doubleCheck[[2]]
overlap <- solvent | spe
overlap
knitr::kable(data.frame(Blank = name, Solvent = sum(solvent), SPE = sum(spe),
Overlap = sum(overlap), Total = length(spe)))
omanFT <- omanFT[!overlap,]
omanFT
solvent
library(dplyr)
library(here)
omanFT <- read.csv(here("data/2018-11-22/OM17 compound_measurements_10k_blanks.csv"),
header = T,
skip = 4)
metadata <- read.table(here("data/2018-11-22/metadata.txt"),
header = T, sep = " ", stringsAsFactors = F)
metadata <- metadata[-nrow(metadata),]
metadata$Sample_Name <- metadata$Sample_Name %>% sub(":", "", .)
dataCols <- list()
for(i in 1:nrow(metadata)) {
dataCols[[i]] <- grep(metadata$Sample_Name[i],colnames(omanFT))[1]
}
colnames(omanFT)[c(2,5)] <- c("Neutral_Mass", "Retention_Time")
omanFT$Retention_Time <- omanFT$Retention_Time * 60
## consider
omanFT <- omanFT[,c(2,5, unlist(dataCols))]
dataCols <- grep("XS1", colnames(omanFT))
colnames(omanFT)[dataCols] <- metadata$Sample_Type[which(metadata$Sample_Name %in%
colnames(omanFT)[dataCols])]
rm(i)
intensityTable <- omanFT[,dataCols]
x <- sapply(1:ncol(intensityTable), function(x) {
hist(intensityTable[,x], main = colnames(intensityTable)[x], breaks = 250)
})
omanFT[,dataCols] <- log1p(intensityTable)
rm(x, intensityTable)
heat <- omanFT[,dataCols]
blankCols <- grep("blank", colnames(heat), ignore.case = T)
name <- c("Count")
solvent <- heat[,blankCols[1]] > 0
spe <- heat[,blankCols[2]] > 0
solvent
library(dplyr)
library(here)
omanFT <- read.csv(here("data/2018-11-22/OM17 compound_measurements_10k_blanks.csv"),
header = T,
skip = 4)
metadata <- read.table(here("data/2018-11-22/metadata.txt"),
header = T, sep = " ", stringsAsFactors = F)
metadata <- metadata[-nrow(metadata),]
metadata$Sample_Name <- metadata$Sample_Name %>% sub(":", "", .)
dataCols <- list()
for(i in 1:nrow(metadata)) {
dataCols[[i]] <- grep(metadata$Sample_Name[i],colnames(omanFT))[1]
}
colnames(omanFT)[c(2,5)] <- c("Neutral_Mass", "Retention_Time")
omanFT$Retention_Time <- omanFT$Retention_Time * 60
## consider
omanFT <- omanFT[,c(2,5, unlist(dataCols))]
dataCols <- grep("XS1", colnames(omanFT))
colnames(omanFT)[dataCols] <- metadata$Sample_Type[which(metadata$Sample_Name %in%
colnames(omanFT)[dataCols])]
rm(i)
intensityTable <- omanFT[,dataCols]
x <- sapply(1:ncol(intensityTable), function(x) {
hist(intensityTable[,x], main = colnames(intensityTable)[x], breaks = 250)
})
omanFT[,dataCols] <- log1p(intensityTable)
rm(x, intensityTable)
heat <- omanFT[,dataCols]
blankCols <- grep("blank", colnames(heat), ignore.case = T)
name <- c("Count")
solvent <- heat[,blankCols[1]] > 0
spe <- heat[,blankCols[2]] > 0
overlap <- solvent | spe
knitr::kable(data.frame(Blank = name, Solvent = sum(solvent), SPE = sum(spe),
Overlap = sum(overlap), Total = length(spe)))
heatmap(as.matrix(heat), main = "Distribution of Features Between Samples")
rm(solvent, spe, overlap, name)
blankData <- heat[,blankCols]
sampleData <- heat[,-blankCols]
double <- log1p(2)
doubleCheck <- list()
for(i in seq_along(blankCols)) {
#minVal <- min(blankData[,i][blankData[,i] > 0])
#x <- blankData[,i][blankData[,i] == 0] <- minVal
foldChange <- apply(sampleData, 2, function(x) {
y <- x/blankData[,i]
infIndex <- is.infinite(y)
y[is.nan(y)] <- 0
if(length(infIndex) > 0) {
y[infIndex] <- max(y[!infIndex])
}
y
}) %>% apply(1, max)
hist(log(foldChange), breaks = 100,
main = paste(colnames(blankData)[i], "Features Under Median Sample Intensity"))
abline(v = double, lty = 2)
doubleCheck[[i]] <- foldChange > double
}
message("Difference in Retained Features Between Approaches: ", 2089 - 1809)
solvent <- !doubleCheck[[1]]
spe <- !doubleCheck[[2]]
overlap <- solvent | spe
name <- c("Count")
knitr::kable(data.frame(Blank = name, Solvent = sum(solvent), SPE = sum(spe),
Overlap = sum(overlap), Total = length(spe)))
message("Difference in Retained Features Between Approaches: ", 2089 - 1242)
solvent <- !doubleCheck[[1]]
spe <- !doubleCheck[[2]]
overlap <- solvent | spe
name <- c("Count")
knitr::kable(data.frame(Blank = name, Solvent = sum(solvent), SPE = sum(spe),
Overlap = sum(overlap), Total = length(spe)))
omanFT <- omanFT[!overlap,]
rm(list=setdiff(ls(), c("omanFT", "metadata", "dataCols")))
write.table(omanFT,
file = here("data/2018-11-23/QA_oman_feature_table.txt"),
row.names = F)
omanFT <- read.table(here("data/2018-11-23/QA_oman_feature_table.txt"), header = T,
stringsAsFactors = F)
dataCols <- 3:9
as.matrix(omanFT[,dataCols]) %>% heatmap()
heatmap(as.matrix(omanFT[,dataCols]), main = "Feature Distribution After QA")
library(dplyr)
library(here)
omanFT <- read.csv(here("data/2018-11-22/OM17 compound_measurements_10k_blanks.csv"),
header = T,
skip = 4)
metadata <- read.table(here("data/2018-11-22/metadata.txt"),
header = T, sep = " ", stringsAsFactors = F)
metadata <- metadata[-nrow(metadata),]
metadata$Sample_Name <- metadata$Sample_Name %>% sub(":", "", .)
dataCols <- list()
for(i in 1:nrow(metadata)) {
dataCols[[i]] <- grep(metadata$Sample_Name[i],colnames(omanFT))[1]
}
colnames(omanFT)[c(2,5)] <- c("Neutral_Mass", "Retention_Time")
omanFT$Retention_Time <- omanFT$Retention_Time * 60
## consider
omanFT <- omanFT[,c(2,5, unlist(dataCols))]
dataCols <- grep("XS1", colnames(omanFT))
colnames(omanFT)[dataCols] <- metadata$Sample_Type[which(metadata$Sample_Name %in%
colnames(omanFT)[dataCols])]
rm(i)
intensityTable <- omanFT[,dataCols]
x <- sapply(1:ncol(intensityTable), function(x) {
hist(intensityTable[,x], main = colnames(intensityTable)[x], breaks = 250)
})
omanFT[,dataCols] <- log1p(intensityTable)
rm(x, intensityTable)
heat <- omanFT[,dataCols]
blankCols <- grep("blank", colnames(heat), ignore.case = T)
name <- c("Count")
solvent <- heat[,blankCols[1]] > 0
spe <- heat[,blankCols[2]] > 0
overlap <- solvent | spe
knitr::kable(data.frame(Blank = name, Solvent = sum(solvent), SPE = sum(spe),
Overlap = sum(overlap), Total = length(spe)))
heatmap(as.matrix(heat), main = "Distribution of Features Between Samples")
rm(solvent, spe, overlap, name)
omanFT
grepl("blank", colnames(omanFT), ignore.case = T)
!grepl("blank", colnames(omanFT), ignore.case = T)
omanFT <- read.table(here("data/2018-11-23/QA_oman_feature_table.txt"), header = T,
stringsAsFactors = F)
dataCols <- 3:9
dataCols <- 3:7
as.matrix(omanFT[,dataCols]) %>% heatmap()
as.matrix(omanFT[,dataCols]) %>% heatmap(main = "Feature Distribution Between Samples")
plot(omanFT$Neutral_Mass, omanFT$Retention_Time)
plot(omanFT$Retention_Time, omanFT$Neutral_Mass)
library(limma)
omanFT
omanFT[,dataCols] %>% apply(2, function(x) {
x[x > 0]
})
omanFT[,dataCols] %>% apply(2, function(x) {
x > 0
})
overlapTable <- omanFT[,dataCols] %>% apply(2, function(x) {
x > 0
})
vennCounts(overlapTable)
vennDiagram(vennCounts(overlapTable))
library(RColorBrewer)
brewer.pal(5, "Set1")
vennDiagram(vennCounts(overlapTable), circle.col = brewer.pal(5, "Set1"))
rm(overlapTable)
overlapTable <- omanFT[,dataCols] %>% apply(2, function(x) {
x > 0
})
vennDiagram(vennCounts(overlapTable), circle.col = brewer.pal(5, "Set1"))
rm(overlapTable)
princomp(omanFT)
omanFT
princomp(omanFT[,dataCols])
print(princomp(omanFT[,dataCols]))
plot(princomp(omanFT[,dataCols]))
